{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\FlightService\\\\front_end\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { AppNav } from './features';\nimport { Landing, FlightCreation, FlightSearch, Error } from './pages';\nimport { ActorForm } from './components/ActorForm';\nimport ThemeContext, { themes } from './contexts/ThemeContext';\nimport \"./App.css\"; // React function based component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Whatever is returned from these functions will be what is rendered\n  const [currTheme, setCurrTheme] = useState(themes.darkGray);\n\n  const toggleTheme = () => {\n    if (currTheme === themes.light) {\n      setCurrTheme(themes.darkGray);\n    } else if (currTheme === themes.darkGray) {\n      setCurrTheme(themes.dark);\n    } else {\n      setCurrTheme(themes.light);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // This wraps all of its children in the context, all children can read from it\n    _jsxDEV(ThemeContext.Provider, {\n      value: currTheme,\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(AppNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Current Flights:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Landing, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/creation\",\n            element: /*#__PURE__*/_jsxDEV(FlightCreation, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/search\",\n            element: /*#__PURE__*/_jsxDEV(FlightSearch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(App, \"DdeUYiWrPVBRZTLG+MQJu6tVWBc=\");\n\n_c = App;\nexport const a = 'A'; // This is a regular export. Also sometimes a \"named export\" since you have to refer to it by variable name\n\nexport default App; // Only one default per file\n// Default exports can renamed in the other file\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","BrowserRouter","Routes","Route","AppNav","Landing","FlightCreation","FlightSearch","Error","ActorForm","ThemeContext","themes","App","currTheme","setCurrTheme","darkGray","toggleTheme","light","dark","a"],"sources":["C:/Users/Will/Desktop/FlightService/front_end/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { AppNav } from './features';\r\nimport { Landing,  FlightCreation, FlightSearch, Error } from './pages';\r\nimport { ActorForm } from './components/ActorForm';\r\nimport ThemeContext, { themes } from './contexts/ThemeContext';\r\nimport \"./App.css\";\r\n\r\n// React function based component\r\n\r\nconst App = () => {\r\n    // Whatever is returned from these functions will be what is rendered\r\n\r\n    const [currTheme, setCurrTheme] = useState(themes.darkGray);\r\n\r\n    const toggleTheme = () => {\r\n        if (currTheme === themes.light) {\r\n            setCurrTheme(themes.darkGray);\r\n        } else if (currTheme === themes.darkGray) {\r\n            setCurrTheme(themes.dark);\r\n        } else {\r\n            setCurrTheme(themes.light);\r\n        }\r\n    }\r\n\r\n    return (\r\n        // This wraps all of its children in the context, all children can read from it\r\n        <ThemeContext.Provider value={currTheme}>\r\n            {/* Everything in here is going to managed by react-router-dom so that it can toggle between pages */}\r\n            <BrowserRouter>\r\n            <AppNav />\r\n                <header>Current Flights:</header>\r\n                <Routes>\r\n                    {/* When the URL in the browser becomes /, toggle on the Landing page */}\r\n                    <Route path=\"/\" element={<Landing />} />\r\n                    <Route path=\"/creation\" element={<FlightCreation />} />\r\n                    <Route path=\"/search\" element={<FlightSearch />} />\r\n                    <Route path=\"*\" element={<Error />} />\r\n                </Routes>\r\n            </BrowserRouter>\r\n        </ThemeContext.Provider>\r\n    );   \r\n}\r\n\r\nexport const a = 'A'; // This is a regular export. Also sometimes a \"named export\" since you have to refer to it by variable name\r\n\r\nexport default App; // Only one default per file\r\n// Default exports can renamed in the other file"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,OAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,KAAjD,QAA8D,SAA9D;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,YAAP,IAAuBC,MAAvB,QAAqC,yBAArC;AACA,OAAO,WAAP,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACd;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACW,MAAM,CAACI,QAAR,CAA1C;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACtB,IAAIH,SAAS,KAAKF,MAAM,CAACM,KAAzB,EAAgC;MAC5BH,YAAY,CAACH,MAAM,CAACI,QAAR,CAAZ;IACH,CAFD,MAEO,IAAIF,SAAS,KAAKF,MAAM,CAACI,QAAzB,EAAmC;MACtCD,YAAY,CAACH,MAAM,CAACO,IAAR,CAAZ;IACH,CAFM,MAEA;MACHJ,YAAY,CAACH,MAAM,CAACM,KAAR,CAAZ;IACH;EACJ,CARD;;EAUA;IAAA;IACI;IACA,QAAC,YAAD,CAAc,QAAd;MAAuB,KAAK,EAAEJ,SAA9B;MAAA,uBAEI,QAAC,aAAD;QAAA,wBACA,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADA,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,MAAD;UAAA,wBAEI,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAgB,OAAO,eAAE,QAAC,OAAD;cAAA;cAAA;cAAA;YAAA;UAAzB;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,KAAD;YAAO,IAAI,EAAC,WAAZ;YAAwB,OAAO,eAAE,QAAC,cAAD;cAAA;cAAA;cAAA;YAAA;UAAjC;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII,QAAC,KAAD;YAAO,IAAI,EAAC,SAAZ;YAAsB,OAAO,eAAE,QAAC,YAAD;cAAA;cAAA;cAAA;YAAA;UAA/B;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAgB,OAAO,eAAE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UAAzB;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA;EAFJ;AAiBH,CAhCD;;GAAMD,G;;KAAAA,G;AAkCN,OAAO,MAAMO,CAAC,GAAG,GAAV,C,CAAe;;AAEtB,eAAeP,GAAf,C,CAAoB;AACpB"},"metadata":{},"sourceType":"module"}